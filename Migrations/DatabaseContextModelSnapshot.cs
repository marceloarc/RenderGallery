// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RenderGallery.Models;

#nullable disable

namespace RenderGallery.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RenderGallery.Models.Chat", b =>
                {
                    b.Property<int>("conversation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("conversation_id"));

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("time")
                        .HasColumnType("datetime");

                    b.Property<int?>("user_one")
                        .HasColumnType("int");

                    b.Property<int?>("user_two")
                        .HasColumnType("int");

                    b.HasKey("conversation_id");

                    b.HasIndex("user_one");

                    b.HasIndex("user_two");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("RenderGallery.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("conversation_id")
                        .HasColumnType("int");

                    b.Property<string>("msg_content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("time")
                        .HasColumnType("datetime");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("visu_status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("conversation_id");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("RenderGallery.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RenderGallery.Models.Chat", b =>
                {
                    b.HasOne("RenderGallery.Models.User", "User1")
                        .WithMany()
                        .HasForeignKey("user_one");

                    b.HasOne("RenderGallery.Models.User", "User2")
                        .WithMany()
                        .HasForeignKey("user_two");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("RenderGallery.Models.Message", b =>
                {
                    b.HasOne("RenderGallery.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("conversation_id");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("RenderGallery.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
